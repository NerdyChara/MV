{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./lib/RS_MessageEffects/core.js","webpack:///./lib/RS_MessageEffects/TextEffect.js","webpack:///./lib/RS_MessageEffects/EffectsPack1.js","webpack:///./lib/RS_MessageEffects/EffectsPack2.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","window","Imported","RS_MessageEffects","RS","MessageEffects","parameters","$plugins","filter","description","contains","length","Params","defaultTextEffect","currentEffect","clearFlag","Boolean","Window_MessageImpl","createMainTextLayer","once","terminateMainTextLayer","Window_Message","w","this","_width","standardPadding","h","_height","_mainTextLayer","Sprite","setFrame","origin","x","y","on","startTextEffect","_windowContentsSprite","addChild","removeChild","removeChildren","args","bitmap","effectType","textState","sprite","EffectFactory","start","contents","createContents","text","index","textWidth","height","Bitmap","fontFace","standardFontFace","fontSize","standardFontSize","fontItalic","textColor","outlineColor","outlineWidth","width","Math","floor","RS_MessageSystem","fontBold","contentsWidth","isValid","$gameMessage","getBalloon","_isUsedTextWidthEx","MessageSystem","isParagraphMinifier","processWordWrap","faceName","Window_Base","_faceWidth","faceDirection","highlightTextColor","fillRect","drawText","emit","_showFast","startWait","getWaitTime","textSoundInterval","_requestTextSound","arr","exec","slice","String","textEffect","keys","TYPE","effects","code","textEffectName","obtainTextEffectName","setTextEffect","effectNum","obtainEscapeParam","addText","alias_Game_Interpreter_pluginCommand","Game_Interpreter","pluginCommand","command","TextEffect","_isStarted","_effectType","updateEffects","_startX","_startY","rotation","_desc","scale","scaleX","scaleY","skew","skewX","skewY","tint","filters","opacity","_tempOpacity","_now","performance","now","_power","_random","random","_index","ET_CLASS","values","assign","DEG_TO_RAD","PI","PingPong","PIXI","PI_2","flush","Slide","HighRotation","dist","tm","cos","sin","tx","ty","NormalRotation","RandomRotation","Shock","anchor","add","ZoomOut","Marquee","_ox","scene","SceneManager","_scene","_messageWindow","Graphics","boxWidth","Wave","max","Spread","_lazy","MouseTracking","x1","y1","x2","y2","sqrt","pow","moveSpeed","_dist","xDist","yDist","getDistance","TouchInput"],"mappings":"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","file":"RS_MessageEffects.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","window.Imported = window.Imported || {};\r\nImported.RS_MessageEffects = true;\r\n\r\nwindow.RS = window.RS || {};\r\nwindow.RS.MessageEffects = window.RS.MessageEffects || {};\r\n\r\nvar parameters = $plugins.filter(function (i) {\r\n  return i.description.contains('<RS_MessageEffects>');\r\n});\r\n\r\nparameters = (parameters.length > 0) && parameters[0].parameters;\r\n\r\nRS.MessageEffects.Params = {};\r\n\r\nRS.MessageEffects.Params.defaultTextEffect = parameters[\"Default Text Effect\"] || \"none\";\r\nRS.MessageEffects.Params.currentEffect = RS.MessageEffects.Params.defaultTextEffect;\r\nRS.MessageEffects.Params.clearFlag = Boolean(parameters[\"Clear Flag\"] === \"true\");\r\n\r\n//================================================================\r\n// Window_MessageImpl\r\n//================================================================    \r\nclass Window_MessageImpl extends Window_Message {\r\n    constructor() {\r\n        super();\r\n\r\n        this.createMainTextLayer();\r\n\r\n        this.once(\"removed\", () => {\r\n            this.terminateMainTextLayer();\r\n        });\r\n\r\n    }\r\n\r\n    clearFlags() {\r\n        super.clearFlags();\r\n        if(RS.MessageEffects.Params.clearFlag) {\r\n            RS.MessageEffects.Params.currentEffect = 'none';\r\n        }\r\n    }\r\n\r\n    _updateContents() {\r\n        super._updateContents();\r\n    }\r\n\r\n    createMainTextLayer() {\r\n        var w = this._width - this.standardPadding() * 2;\r\n        var h = this._height - this.standardPadding() * 2;\r\n\r\n        this._mainTextLayer = new Sprite();\r\n        this._mainTextLayer.setFrame(this.origin.x, this.origin.y, w, h);\r\n        this._mainTextLayer.on(\"effect\", this.startTextEffect, this);\r\n        this._windowContentsSprite.addChild(this._mainTextLayer);\r\n    }\r\n\r\n    terminateMainTextLayer() {\r\n        if(this._mainTextLayer) {\r\n            this._windowContentsSprite.removeChild(this._mainTextLayer);\r\n            this._mainTextLayer = null;\r\n        }\r\n    }\r\n\r\n    terminateMessage() {\r\n        super.terminateMessage();\r\n\r\n        if(this._mainTextLayer) {\r\n            this._mainTextLayer.removeChildren();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {Array} args\r\n     */\r\n    startTextEffect(args) {\r\n\r\n        var w = this._width - this.standardPadding() * 2;\r\n        var h = this._height - this.standardPadding() * 2;\r\n\r\n        /**\r\n         * @type {TextEffect}\r\n         */\r\n        const bitmap = args[0];  \r\n        const effectType = RS.MessageEffects.Params.currentEffect;\r\n        const textState = args[1];\r\n\r\n        if(!bitmap) return;                       \r\n\r\n        let sprite = EffectFactory.create(effectType);\r\n\r\n        sprite.bitmap = bitmap;\r\n        \r\n        this._mainTextLayer.addChild(sprite);       \r\n\r\n        sprite.start(textState);\r\n\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {MV.TextState} textState \r\n     */\r\n    addText(textState) {\r\n        if(!this.contents) {\r\n            this.createContents();\r\n        }\r\n\r\n        let c = textState.text[textState.index++];\r\n        \r\n        let w = this.textWidth(c);\r\n        let h = textState.height;\r\n\r\n        var bitmap = new Bitmap(w * 2, h);\r\n\r\n        // FontFace를 먼저 설정해야 색깔이 정상적으로 변경됨\r\n        bitmap.fontFace = this.standardFontFace();\r\n\r\n        bitmap.fontSize = this.standardFontSize();\r\n        bitmap.fontItalic = this.contents.fontItalic;\r\n        bitmap.textColor = this.contents.textColor;\r\n        bitmap.outlineColor = this.contents.outlineColor;\r\n        bitmap.outlineWidth = this.contents.outlineWidth;\r\n\r\n        if(this.contents.width < Math.floor(textState.x + w * 2)) {\r\n            return;\r\n        }\r\n\r\n        // 자동 개행, 배경색 설정을 위해서.\r\n        if(Imported.RS_MessageSystem) {\r\n            bitmap.fontBold = this.contents.fontBold;\r\n\r\n            var width = this.contentsWidth();\r\n\r\n            var isValid = ($gameMessage.getBalloon() === -2) && !this._isUsedTextWidthEx && RS.MessageSystem.Params.isParagraphMinifier;\r\n        \r\n            this.processWordWrap(textState, w, width, isValid);\r\n        \r\n            if($gameMessage.faceName() !== \"\") {\r\n              width = this.contents.width - (Window_Base._faceWidth);\r\n              isValid = (RS.MessageSystem.Params.faceDirection === 2);\r\n              this.processWordWrap(textState, w, width, isValid);\r\n            }\r\n\r\n            if(this.contents.highlightTextColor != null) {\r\n                bitmap.fillRect( 0, 0, w + 1.0, textState.height, this.contents.highlightTextColor);\r\n            }\r\n            \r\n        }\r\n\r\n        bitmap.drawText(c, 0, 0, w * 2 , h, \"left\");\r\n\r\n        if(!this._isUsedTextWidthEx) {\r\n            this._mainTextLayer.emit(\"effect\", [\r\n                bitmap,\r\n                textState\r\n            ]);\r\n        }\r\n\r\n        textState.x += w;\r\n\r\n        if(Imported.RS_MessageSystem) {\r\n            !this._showFast && this.startWait($gameMessage.getWaitTime() || 0);\r\n            if((textState.index % RS.MessageSystem.Params.textSoundInterval) === 0) this._requestTextSound();                \r\n        }\r\n    }\r\n\r\n    /**\r\n     * @method obtainTextEffectName\r\n     * @param {MV.TextState} textState \r\n     */\r\n    obtainTextEffectName(textState) {\r\n        var arr = /\\<(.*)\\>/.exec(textState.text.slice(textState.index));\r\n        if (arr) {\r\n            textState.index += arr[0].length;\r\n            return String(arr[1]);\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    setTextEffect(textEffect) {\r\n        if(typeof(textEffect) === \"number\") {\r\n            var keys = Object.keys(EffectFactory.TYPE);\r\n            var effects = keys[textEffect];\r\n            if(keys.contains(effects)) {\r\n                textEffect = effects;\r\n            } else {\r\n                textEffect = RS.MessageEffects.Params.defaultTextEffect;\r\n            }\r\n        }\r\n        RS.MessageEffects.Params.currentEffect = textEffect;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {String} code \r\n     * @param {MV.TextState} textState \r\n     */\r\n    processEscapeCharacter(code, textState) {                          \r\n        switch (code) {\r\n            case '텍스트효과':\r\n            case 'TE': // \\TE<PingPong>\r\n                const textEffectName = this.obtainTextEffectName(textState);\r\n                if(!this._isUsedTextWidthEx) {\r\n                    this.setTextEffect(textEffectName);\r\n                }\r\n                break;\r\n            case 'E': // \\E[1]\r\n                const effectNum = this.obtainEscapeParam(textState);\r\n                if(!this._isUsedTextWidthEx) {                    \r\n                    this.setTextEffect(effectNum - 1);\r\n                }                \r\n            default:\r\n                super.processEscapeCharacter(code, textState);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {MV.TextState} textState \r\n     */        \r\n    processNormalCharacter(textState) {\r\n        if(RS.MessageEffects.Params.currentEffect !== \"none\") {\r\n            this.addText(textState);\r\n        } else {\r\n            super.processNormalCharacter(textState);\r\n        }\r\n    }\r\n\r\n    startPause() {\r\n        super.startPause();\r\n        // this._mainTextLayer.children.forEach(i => i.flush());\r\n    }\r\n\r\n}\r\n\r\nwindow.Window_Message = Window_MessageImpl;\r\n\r\nvar alias_Game_Interpreter_pluginCommand = Game_Interpreter.prototype.pluginCommand;\r\nGame_Interpreter.prototype.pluginCommand = function(command, args) {\r\n    alias_Game_Interpreter_pluginCommand.call(this, command, args);\r\n    if(command === \"MessageEffectMap\") {\r\n        RS.MessageEffects.Params.currentEffect = args[0];\r\n    }\r\n};                 ","//================================================================\r\n// TextEffect\r\n//================================================================\r\nclass TextEffect extends Sprite {\r\n    constructor(bitmap) {\r\n        super(bitmap);\r\n        this._isStarted = false;\r\n        this._effectType = \"pingpong\";\r\n\r\n    }\r\n\r\n    update() {\r\n        super.update();\r\n        this.updateEffects();\r\n    }\r\n\r\n    flush() {\r\n        this._isStarted = false;\r\n        this.x = this._startX;\r\n        this.y = this._startY;\r\n        this.rotation = this._desc.rotation;\r\n        this.scale.x = this._desc.scaleX;\r\n        this.scale.y = this._desc.scaleY;\r\n        this.skew.x = this._desc.skewX;\r\n        this.skew.y = this._desc.skewY;\r\n        this.tint = this._desc.tint;\r\n        this.filters = this._desc.filters;\r\n        this.opacity = this._tempOpacity;\r\n        this._desc = {};\r\n    }\r\n\r\n    updateEffects() {\r\n    }\r\n\r\n    /**\r\n     * @param {MV.TextState} textState\r\n     */\r\n    start(textState) {\r\n        this._now = performance.now();\r\n        this._isStarted = true;       \r\n        this._power = 1;   \r\n        this.x = textState.x;\r\n        this.y = textState.y;\r\n        this._startX = this.x;\r\n        this._startY = this.y;\r\n        this._random = Math.floor(Math.random() * 60);\r\n        this._index = textState.index;\r\n        this._tempOpacity = this.opacity;\r\n\r\n        this._desc = {\r\n            x: this.x,\r\n            y: this.y,\r\n            rotation: this.rotation,    \r\n            scaleX: this.scale.x || 1.0,\r\n            scaleY: this.scale.y || 1.0,\r\n            skewX :this.skew.x || 0.0,\r\n            skewY :this.skew.y || 0.0,\r\n            opacity: this.opacity,\r\n            tint: this.tint,\r\n            filters: this.filters,\r\n        };\r\n        \r\n\r\n    };\r\n}\r\n\r\nclass EffectFactory {\r\n    static create(effectType) {\r\n        \r\n        let sprite;\r\n\r\n        var keys = Object.keys(EffectFactory.TYPE);\r\n\r\n        if(keys.contains(effectType)) {\r\n            var ET_CLASS = EffectFactory.TYPE[effectType];\r\n            sprite = new ET_CLASS();\r\n        } else {\r\n            sprite = new TextEffect();\r\n        }\r\n\r\n        return sprite;\r\n\r\n    }\r\n\r\n    static add(values) {\r\n        Object.assign( EffectFactory.TYPE, values );\r\n    }\r\n\r\n}\r\n\r\nif(!EffectFactory.TYPE) {\r\n\r\n    EffectFactory.TYPE = {\r\n    };\r\n\r\n    window.EffectFactory = EffectFactory;\r\n\r\n}\r\n\r\nexport {TextEffect, EffectFactory};","import {TextEffect, EffectFactory} from \"./TextEffect\";\r\n\r\nconst DEG_TO_RAD  = (Math.PI / 180.0);\r\n\r\nclass PingPong extends TextEffect {\r\n    \r\n  constructor(bitmap) {\r\n      super(bitmap);\r\n      this._effectType = \"pingpong\";\r\n  }\r\n\r\n  updateEffects() {\r\n      if(!this._isStarted) return;            \r\n      if(this._power <= 60) {\r\n          this.y = this._startY + (PIXI.PI_2 / this._power) * 4.0;\r\n          this._power++;\r\n      } else {\r\n          this.flush();\r\n      }\r\n  }\r\n}    \r\n\r\nclass Slide extends TextEffect {\r\n  \r\n  constructor(bitmap) {\r\n    super(bitmap);\r\n    this._effectType = \"slide\";\r\n  }\r\n  \r\n  updateEffects() {\r\n    if(!this._isStarted) return;            \r\n    if(this._power <= 60) {\r\n      this.x = this._startX + (PIXI.PI_2 / this._power) * (this._index % 4) * 4;\r\n      this.opacity = 4 * this._power;\r\n      this._power++;\r\n    } else {\r\n      this.flush();\r\n    }\r\n  }\r\n}        \r\n\r\nclass HighRotation extends TextEffect {\r\n  \r\n  constructor(bitmap) {\r\n    super(bitmap);\r\n    this._effectType = \"high_rot\";\r\n  }\r\n  \r\n  updateEffects() {\r\n    if(!this._isStarted) return;            \r\n    if(this._power <= this._random) {\r\n      let dist = this._random - this._power;\r\n      let tm = performance.now();\r\n      let r = DEG_TO_RAD * dist * (this._random % 2 == 0 ? -tm : tm);\r\n      let c = Math.cos(r);\r\n      let s = Math.sin(r);\r\n      let tx = this._startX - dist;\r\n      let ty = this._startY - dist;\r\n      this.x = tx * c - ty * s;\r\n      this.y = tx * s + ty * c;\r\n      this._power++;\r\n    } else {\r\n      this.flush();\r\n    }\r\n  }\r\n}            \r\n\r\nclass NormalRotation extends TextEffect {\r\n  \r\n  constructor(bitmap) {\r\n    super(bitmap);\r\n    this._effectType = \"normal_rot\";\r\n  }\r\n  \r\n  updateEffects() {\r\n    if(!this._isStarted) return;            \r\n    if(this._power <= this._random) {\r\n      let dist = this._random - this._power;\r\n      let tm = performance.now();\r\n      let r = DEG_TO_RAD * dist * (this._index % 3 == 0 ? -1 : 1);\r\n      let c = Math.cos(r);\r\n      let s = Math.sin(r);\r\n      let tx = (this._startX - dist);\r\n      let ty = this._startY - dist;\r\n      this.x = tx * c - ty * s;\r\n      this.y = tx * s + ty * c;\r\n      this._power++;\r\n    } else {\r\n      this.flush();\r\n    }\r\n  }\r\n}       \r\n\r\nclass RandomRotation extends TextEffect {\r\n  \r\n  constructor(bitmap) {\r\n    super(bitmap);\r\n    this._effectType = \"random_rot\";\r\n  }\r\n  \r\n  updateEffects() {\r\n    if(!this._isStarted) return;            \r\n    if(this._power <= this._random) {\r\n      let dist = this._random - this._power;\r\n      let r = DEG_TO_RAD * dist * (this._random % 2 == 0 ? -1 : 1);\r\n      let c = Math.cos(r);\r\n      let s = Math.sin(r);\r\n      let tx = this._startX - dist;\r\n      let ty = this._startY - dist;\r\n      this.x = tx * c - ty * s;\r\n      this.y = tx * s + ty * c;\r\n      this._power++;\r\n    } else {\r\n      this.flush();\r\n    }\r\n  }\r\n}         \r\n\r\nclass Shock extends TextEffect {\r\n  constructor(bitmap) {\r\n    super(bitmap);\r\n    \r\n    this._effectType = \"shock\";\r\n  }\r\n  \r\n  flush() {\r\n    super.flush();\r\n    this.rotation = 0.0;\r\n    this.anchor.x = 0.0;\r\n    this.anchor.y = 0.0;\r\n  }\r\n  \r\n  updateEffects() {\r\n    if(!this._isStarted) return;      \r\n    if(this._power <= 60) {\r\n      this.anchor.x = -0.8 + Math.random();\r\n      this.anchor.y = -0.8 + Math.random();                \r\n    } else {\r\n      this.flush();\r\n    }\r\n  }\r\n  \r\n  start(textState) {\r\n    super.start(textState);\r\n  }\r\n  \r\n}    \r\n\r\nEffectFactory.add({\r\n  'pingpong': PingPong,  \r\n  'slide': Slide,\r\n  'high_rot': HighRotation,\r\n  'normal_rot': NormalRotation,\r\n  'random_rot': RandomRotation,\r\n  'shock': Shock,    \r\n});","import {TextEffect, EffectFactory} from \"./TextEffect\";\r\n\r\nclass ZoomOut extends TextEffect {\r\n    \r\n    constructor(bitmap) {\r\n        super(bitmap);\r\n        \r\n        this._effectType = \"zoomout\";\r\n    }    \r\n\r\n    updateEffects() {\r\n        if(!this._isStarted) return;\r\n        this.scale.x = (200.0 - this._power) / 100.0;\r\n        this.scale.y = (200.0 - this._power) / 100.0;\r\n        \r\n        if((this.scale.x + 0.0001) <= 1.0) {\r\n            this.flush();\r\n        }\r\n\r\n        this._power++;\r\n    }   \r\n    \r\n    start(textState) {\r\n        super.start(textState);\r\n        this.scale.x = 1.5;\r\n        this.scale.y = 1.5;\r\n    }    \r\n}\r\n\r\nclass Marquee extends TextEffect {\r\n    constructor(bitmap) {\r\n        super(bitmap);\r\n        \r\n        this._effectType = \"marquee\";\r\n    }    \r\n\r\n    updateEffects() {\r\n        if(!this._isStarted) return;\r\n\r\n        this._ox -= 4;\r\n\r\n        this.x = this._startX + this._ox;\r\n\r\n        if(this._ox < 0) {\r\n            this.flush();\r\n        }\r\n    }   \r\n    \r\n    /**\r\n     * \r\n     * @param {MV.TextState} textState \r\n     */\r\n    start(textState) {\r\n        super.start(textState);\r\n\r\n        let width = 0;\r\n        let scene = SceneManager._scene;\r\n        if(scene && scene._messageWindow) {\r\n            width = scene._messageWindow.width;\r\n        } else {\r\n            width = Math.floor(Graphics.boxWidth / 2);\r\n        }\r\n            \r\n        this._ox = width;\r\n        this.x += width;\r\n\r\n    }    \r\n}\r\n\r\nclass Wave extends TextEffect {\r\n    constructor(bitmap) {\r\n        super(bitmap);\r\n        \r\n        this._effectType = \"wave\";\r\n    }    \r\n\r\n    updateEffects() {\r\n        if(!this._isStarted) return;\r\n        this.skew.x = 60.0 * Math.max(this._startX % 5, 1);\r\n        this.skew.y = Math.random() * 2.0 * this._index;\r\n        if(this._power >= 60) {\r\n            this.flush();\r\n        }\r\n        this._power++;\r\n    }   \r\n    \r\n    start(textState) {\r\n        super.start(textState);\r\n    }    \r\n}\r\n\r\nclass Spread extends TextEffect {\r\n    constructor(bitmap) {\r\n        super(bitmap);\r\n        \r\n        this._effectType = \"spread\";\r\n    }    \r\n\r\n    updateEffects() {\r\n        if(!this._isStarted) return;\r\n        if(!(performance.now() - this._lazy) >= 1500) return;\r\n        switch(this._index) {\r\n            case 3:\r\n                this.x = this._startX - this._power;\r\n                break;\r\n            case 1:\r\n                this.x = this._startX + this._power;\r\n                break;\r\n            case 0:\r\n                this.y = this._startY - this._power;\r\n                break;\r\n            case 2:\r\n                this.y = this._startY + this._power;\r\n                break;\r\n        }\r\n\r\n        if(this._power >= 600) {\r\n            this.flush();\r\n        }\r\n\r\n    }   \r\n    \r\n    /**\r\n     * \r\n     * @param {MV.TextState} textState \r\n     */\r\n    start(textState) {\r\n        super.start(textState);\r\n        this._lazy = performance.now();\r\n        this._index = textState.index % 4;\r\n    }    \r\n}\r\n\r\nclass MouseTracking extends TextEffect {\r\n    constructor(bitmap) {\r\n        super(bitmap);\r\n        \r\n        this._effectType = \"mouse_tracking\";\r\n    }\r\n\r\n    getDistance(x1, y1, x2, y2) {\r\n        return Math.sqrt( Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2) );\r\n    }\r\n\r\n    updateEffects() {\r\n        if(!this._isStarted) return;\r\n\r\n        let moveSpeed = this._dist / 30.0;\r\n\r\n        let x1 = this._startX - this.x;\r\n        let y1 = this._startY - this.y;\r\n        let xDist = 0;\r\n        let yDist = 0;\r\n\r\n        if(x1 < 0) {\r\n            xDist = moveSpeed;\r\n        } else if(x1 > 0) {\r\n            xDist = -moveSpeed;\r\n        } else {\r\n            xDist = 0;\r\n        }\r\n\r\n        if(y1 < 0) {\r\n            yDist = moveSpeed;\r\n        } else if(y1 > 0) {\r\n            yDist = -moveSpeed;\r\n        } else {\r\n            yDist = 0;\r\n        }\r\n\r\n        let tx = this.x - xDist;\r\n        let ty = this.y - yDist;\r\n\r\n        this.x = tx;\r\n        this.y = ty;\r\n\r\n        let dist = Math.floor(this.getDistance(this._startX, this._startY, TouchInput.x, TouchInput.y));\r\n        if(dist < 16) {\r\n            this.flush();\r\n        }\r\n\r\n    }   \r\n    \r\n    start(textState) {\r\n        super.start(textState);\r\n        this.x = TouchInput.x;\r\n        this.y = TouchInput.y;\r\n        this._dist = Math.floor(this.getDistance(this._startX, this._startY, TouchInput.x, TouchInput.y));\r\n    }\r\n}\r\n\r\nEffectFactory.add({\r\n    \"zoomout\": ZoomOut,\r\n    \"marquee\": Marquee,\r\n    \"wave\": Wave,\r\n    \"zoomout\": ZoomOut,\r\n    \"spread\": Spread,\r\n    \"mouse_tracking\": MouseTracking,\r\n});"],"sourceRoot":""}